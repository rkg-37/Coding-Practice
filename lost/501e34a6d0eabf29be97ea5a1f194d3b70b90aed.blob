import java.util.*;
import java.lang.*;
public class next_permutation{
    public static void reverse(int[] arr,int start,int end){
        while(start<end){
            int temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            start++;
            end--;
        }
    }
    public static int[] solve(int n,int[] arr){
        int i = n-2;
        while(arr[i] >= arr[i+1]){
            i--;
        }
        if(i>=0){
            int j=n-1;
            while(arr[i] >= arr[j]){
                j--;
            }
            int temp = arr[i];
            arr[i]  = arr[j];
            arr[j] = temp;
        }
        reverse(arr,i+1,n-1);
        return arr;
    }

    public static void main(String[] args){
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        int[] nums=new int[n];
        for(int i=0;i<n;i++)
            nums[i] = s.nextInt();
        System.out.println(Arrays.toString(solve(n,nums)));
    }
}
// Implement the next permutation, which rearranges the list of numbers into Lexicographically next greater permutation of 
// list of numbers. If such arrangement is not possible, it must be rearranged to the lowest possible order i.e.
// sorted in an ascending order. You are given an list of numbers arr[ ] of size N.

// Example 1:

// Input: N = 6
// arr = {1, 2, 3, 6, 5, 4}
// Output: {1, 2, 4, 3, 5, 6}
// Explaination: The next permutation of the 
// given array is {1, 2, 4, 3, 5, 6}.