class search_in_the_matrix
{
    static int Binary_search(int[] arr,int start,int end,int target){
        if(start<=end){
            int mid = (start+end)/2;
            if(arr[mid] == target)
                return 1;
            else if(arr[mid] > target)
                return Binary_search(arr,start,mid-1,target);
            else
                return Binary_search(arr,mid+1,end,target);
        }
        return 0;
    }
    
    public static int matSearch(int mat[][], int N, int M, int X)
    {
        // your code here
        
        for(int i=0;i<N;i++){
            if(X >= mat[i][0] && X <= mat[i][M-1])
                if(Binary_search(mat[i],0,M-1,X) == 1)
                    return 1;
        }
        return 0;
    }

    // row wise columns wise sorting
    public static int matSearch2(int mat[][], int N, int M, int X)
    {
        // your code here
        int i=0,j=M-1;
        while(i<N && j>=0){
            if(mat[i][j] == X)
                return 1;
            if(mat[i][j] > X)
                j--;
            else
                i++;
        }       
        return 0;
    }
    public static void main(String[] args){
        int n =  6,m =  7;
        int[][]  arr = {{1, 3, 3, 5 ,5 ,8, 9},
                        {10 ,11 ,12, 12 ,14 ,18 ,20},
                        {23 ,26 ,27 ,27 ,28, 29 ,30},
                        {31 ,32 ,33 ,41 ,45, 45 ,46},
                        {47 ,49 ,50 ,57 ,58, 58 ,61},
                        {62 ,63, 66 ,67, 67, 70 ,70}};
        int target = 29;
        System.out.println(matSearch(arr,n,m,target));
        System.out.println(matSearch2(arr,n,m,target));
// 29
    }
}
