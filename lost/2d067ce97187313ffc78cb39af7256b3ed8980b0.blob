import java.util.*;
import java.lang.*;
class bitonic_point {
    static int findMaximum(int[] arr, int n) {
        // code here
        int s = 0,e=n-1;
        int res=0;
        while(s<=e){
            int m = s+(e-s)/2;
            if((m>0 && m<n-1 && arr[m] > arr[m-1] && arr[m] > arr[m+1]) || (m==0 && arr[m]>arr[m+1]) || (m==n-1 && arr[m] > arr[m-1])){
                return arr[m];
            }else if(m+1<n && arr[m]<arr[m+1]){
                if(res<arr[m])
                    res = arr[m];
                s = m+1;
            }else if(m+1 <n && arr[m]>arr[m+1]){
                e = m-1;
            }
        }
        return res;
    }

    public static void main(String[] args){
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        int[] arr = new int[n];
        for(int i=0;i<n;i++){   
            arr[i] = s.nextInt();
        }
        System.out.println(findMaximum(arr,n));
    }
}
